{"version":3,"sources":["components/ToDoItem.jsx","components/ToDoForm.jsx","components/ToDo.jsx","index.jsx"],"names":["ToDoItem","props","item","onCheck","onRemove","className","checked","onChange","id","style","title","date","desc","danger","type","onClick","e","preventDefault","icon","DeleteOutlined","ToDoForm","onSubmit","Form","useForm","form","layout","onFinish","values","resetFields","Item","name","placeholder","minLength","pattern","htmlType","ToDo","useState","Date","getDay","getMonth","getFullYear","getHours","getMinutes","todos","setTodos","idCount","setIdCount","index","findIndex","todo","splice","description","length","alert","toUpperCase","map","renderTodoItems","count","i","numberOfUnChecked","Header","Layout","Footer","Content","App","span","offset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2ee02be.chunk.js","sourcesContent":["import {React } from 'react';\r\nimport { Button, Checkbox } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nexport const ToDoItem = (props) => {\r\n  const { item, onCheck, onRemove } = props;\r\n  const onRemoveItem = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (onRemove) {\r\n      onRemove(item.id);\r\n    }\r\n  }\r\n\r\n  const onCheckItem = () => {\r\n    if (onCheck) {\r\n      onCheck(item.id);\r\n    }\r\n  }\r\n\r\n    return (\r\n        <li className=\"todo-item\" key={item.id}>\r\n            <div className=\"todo-item-body\">\r\n                <Checkbox checked={item.checked} onChange={onCheckItem}></Checkbox>\r\n                <p style={ item.checked ? {'color': 'grey', 'text-decoration': 'line-through'} : {'fontWeight': 'bold'}}>{item.title}, created on: {item.date}</p>\r\n                <p style={ item.checked ? {'color': 'grey', 'text-decoration': 'line-through'} : {'color': 'green'}}>{\"Description: \" + item.desc}</p>\r\n            </div>\r\n            <Button danger = \"true\" type = \"primary\" onClick={onRemoveItem} icon={<DeleteOutlined />}></Button>\r\n        </li>\r\n    )\r\n}","import React from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nexport const ToDoForm = (props) => {\r\n  const { onSubmit } = props;\r\n  const [form] = Form.useForm();\r\n  const onFinish = (values) => {\r\n    if (onSubmit) {\r\n      onSubmit(values.title, values.desc);\r\n    }\r\n    form.resetFields();\r\n  }\r\n\r\n  return (\r\n    <Form className=\"todo-form\" form={form} layout={'inline'} onFinish={onFinish}>\r\n      <Form.Item name=\"title\" className=\"todo-form-input\">\r\n        <Input placeholder={'Title'} minLength=\"3\" pattern=\"[A-Z][a-z]*\"/>\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"desc\" className=\"todo-form-input\">\r\n        <Input placeholder={'Description'} minLength=\"3\"/>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"todo-form-actions\">\r\n        <Button htmlType=\"submit\" type=\"primary\">Add</Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Card, Divider, Button } from 'antd';\r\nimport { ToDoItem } from './ToDoItem';\r\nimport { ToDoForm } from './ToDoForm';\r\n\r\nexport const ToDo = () => {\r\n  const [todos, setTodos] = useState([\r\n    {id: 1, title: 'React', desc : 'Create React App', date: new Date().getDay() + '.' + new Date().getMonth() + '.'  + new Date().getFullYear() + ' - ' + new Date().getHours() + ':' + new Date().getMinutes(), checked: false},\r\n    {id: 2, title: 'Angular', desc : 'Create Angular App', date: new Date().getDay() + '.' + new Date().getMonth() + '.'  + new Date().getFullYear() + ' - ' + new Date().getHours() + ':' + new Date().getMinutes(), checked: false},\r\n    {id: 3, title: 'AntDesign', desc : 'Use antd library', date: new Date().getDay() + '.' + new Date().getMonth() + '.'  + new Date().getFullYear() + ' - ' + new Date().getHours() + ':' + new Date().getMinutes(), checked: false}\r\n  ]);\r\n  const [idCount, setIdCount] = useState(10);\r\n\r\n  const renderTodoItems = (todos) => {\r\n    return (\r\n      <ul className=\"todo-list\">\r\n        { todos.map(todo => <ToDoItem \r\n            key={todo.id}\r\n            item={todo}\r\n            onRemove={onRemove} \r\n            onCheck={onCheck} \r\n          />) }\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  const onRemove = (id) => {\r\n    const index = todos.findIndex(todo => todo.id === id);\r\n\r\n    if (index !== -1) {\r\n      todos.splice(index, 1);\r\n      setTodos([...todos]);\r\n    }\r\n  }\r\n\r\n  const onCheck = (id) => {\r\n    const index = todos.findIndex(todo => todo.id === id);\r\n    \r\n    if (index !== -1) {\r\n      const todo = todos[index];\r\n    \r\n      todo.checked = !todo.checked;\r\n      todos.splice(index, 1, todo);\r\n      \r\n      setTodos([...todos]);\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  const onSubmit = (title, description) => {\r\n    if (title.length < 3 || description.length < 3)\r\n      alert(\"Both title and description should be longer than 3 characters\");\r\n    else if (title[0] !== title[0].toUpperCase())\r\n      alert(\"Title should start from capital letter!\");\r\n    else {\r\n      const todo = {\r\n        title,\r\n        description,\r\n        date: new Date().getDay() + '.' + new Date().getMonth() + '.'  + new Date().getFullYear() + ' - ' + new Date().getHours() + ':' + new Date().getMinutes(),\r\n        id: idCount,\r\n        checked: false\r\n      };\r\n      setTodos([...todos, todo]);\r\n      setIdCount(idCount + 1);\r\n    }\r\n  }\r\n\r\n\r\n  const removeChecked = () => { \r\n    \r\n    let i = todos.length;\r\n    while (i--) {\r\n      if (todos[i].checked === true) {\r\n          todos.splice(i, 1);\r\n      }\r\n    }\r\n    \r\n    setTodos([...todos]);\r\n  }\r\n\r\n\r\n\r\n  const numberOfUnChecked = () => { \r\n\r\n    let count = 0;\r\n\r\n    let i = todos.length;\r\n    while (i--) {\r\n      if (todos[i].checked === false) {\r\n          count++;\r\n      }\r\n    }\r\n\r\n    return count;\r\n  }\r\n\r\n\r\n  return (\r\n    <Card title={'ToDo List'} className=\"todo-card\">\r\n      <ToDoForm onSubmit={onSubmit} />\r\n      <Divider />\r\n      { renderTodoItems(todos) }\r\n      <Divider />\r\n      <p>Number of Unchecked cards: <p className=\"todo-numberUnchecked\">{numberOfUnChecked()}</p></p>\r\n      <Divider />\r\n      <Button danger = \"true\" htmlType=\"submit\" type=\"primary\" onClick={removeChecked}>Remove checked cards</Button>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Layout, Row, Col } from 'antd';\r\n\r\nimport { ToDo } from './components/ToDo';\r\n\r\nimport 'antd/dist/antd.css'\r\nimport './index.css';\r\n\r\nconst { Header, Footer, Content } = Layout;\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <Layout>\r\n      <Header></Header>\r\n      <Content>\r\n        <Row>\r\n          <Col span={12} offset={6} className=\"todo\">\r\n            <ToDo />\r\n          </Col>\r\n        </Row>\r\n      </Content>\r\n      <Footer></Footer>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}